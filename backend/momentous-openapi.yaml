openapi: 3.0.3
info:
  description: Momentous web service spec
  version: "0.6.0"
  title: Momentous web service spec
  contact:
    email: k.hasan.rajib@gmail.cloud
servers:
  - url: 'https://gkgrkwk5t4.execute-api.us-west-2.amazonaws.com/{basePath}'
    variables:
      basePath:
        default: dev
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-minimum-compression-size: 1024
paths:
  /causes/list:
    get:
      tags:
        - causes
      summary: find list of causes
      operationId: listCausesBy
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: number of records to get
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousCauseListFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
  '/cause/create/{user_id}':
    post:
      tags:
        - causes
      summary: create operation for a cause
      operationId: createCauseById
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to add a cause
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CauseDetails'
        description: Cause information to add
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousCauseCRUDFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
  '/cause/{user_id}/{cause_id}':
    get:
      tags:
        - causes
      summary: retrieve operation for cause
      operationId: getCauseById
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to get a cause details
          schema:
            type: string
            format: uuid
        - name: cause_id
          in: path
          required: true
          description: pass a cause id to get a cause details
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousCauseCRUDFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
  '/cause/update/{user_id}/{cause_id}':
    put:
      tags:
        - causes
      summary: update operation for a cause
      operationId: updateCauseById
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to update a cause
          schema:
            type: string
            format: uuid
        - name: cause_id
          in: path
          required: true
          description: pass a cause id to update a cause
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CauseDetails'
        description: Cause information to add/update/delete
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousCauseCRUDFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
  
  '/user/wallet/{user_id}':
    get:
      tags:
        - user
      summary: retrieve operation for user wallet
      operationId: getUserWalletByUserId
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to get user wallet details
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousUserWalletCRUDFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
    
    post:
      tags:
        - user
      summary: create operation for user wallet
      operationId: createUserWalletByUserId
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to add a wallet
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousUserWalletCRUDFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
      
    put:
      tags:
        - user
      summary: update operation for user wallet
      operationId: updateUserWalletByUserId
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to update wallet
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWallet'
        description: Wallet information to update
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousUserWalletCRUDFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
      
  /cause/vote/{user_id}/{cause_id}:
    post:
      tags:
        - voting
      summary: create operation for a vote
      operationId: createVoteByCauseId
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to vote for a cause
          schema:
            type: string
            format: uuid
        - name: cause_id
          in: path
          required: true
          description: pass a cause_id to vote for a cause
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteType'
        description: Cause information to add
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousCauseVoteFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
    
    delete:
      tags:
        - voting
      summary: delete operation for a vote
      operationId: deleteVoteByCauseId
      parameters:
        - name: user_id
          in: path
          required: true
          description: pass an user_id to delete a vote for a cause
          schema:
            type: string
            format: uuid
        - name: cause_id
          in: path
          required: true
          description: pass a cause_id to delete a vote for a cause
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MomentousCauseVoteFunction.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: WHEN_NO_TEMPLATES
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
      x-amazon-apigateway-request-validator: basic
  
components:
  schemas:
    CauseDetails:
      properties:
        user_name:
          type: string
        content:
          type: string
        images:
          type: array
        cause_status:
          type: string
          enum: ["ACTIVE", "ARCHIVED"]
      required:
        - content
        - images
    VoteType:
      properties:
        vote:
          type: string
          enum: ['UP', 'DOWN']
      required:
        - vote
    UserWallet:
      properties:
        hash_increment:
          type: integer
      required:
        - hash_increment