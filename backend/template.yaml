Transform: 'AWS::Serverless-2016-10-31'
Globals:
  Function:
    Timeout: 30
    # AutoPublishAlias: live
  Api:
    OpenApiVersion: 3.0.3
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Parameters:

  Environment:
    Type: String
    Description: The environment tag is used to designate the environment stage of the associated AWS resources
    Default: Development
    AllowedValues:
      - Development
      - Staging
      - Production
      
  CloudFrontUrl:
    Description: Cloud front url of the front end
    Type: String
  
  GoogleClientId:
    Description: Google Client id
    Type: String
    
  GoogleClientSecret:
    Description: Google Client secret
    Type: String

Mappings:
  Environment:
    Development:
      AbbrLowerCase: dev
      AbbrUpperCase: DEV
    Staging:
      AbbrLowerCase: stg
      AbbrUpperCase: STG
    Production:
      AbbrLowerCase: prod
      AbbrUpperCase: PROD


Resources:

  MomentousAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Auth function
      CodeUri: ./momentous-authorizer
      FunctionName: Momentous-api-authorizer
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - Ref: LayerDependencies
      MemorySize: 256
      Environment:
        Variables:
          AWS_COGNITO_REGION: !Sub ${AWS::Region}
          COGNITO_USER_POOL_ID: !Ref MomentousUserPool
          COGNITO_APP_CLIENT_ID: !Ref MomentousCognitoUserPoolClient


  MomentousUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-users
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      SmsConfiguration:
        ExternalId: !Sub ${AWS::StackName}-external
        SnsCallerArn: !GetAtt SNSCognitoRole.Arn
      AutoVerifiedAttributes:
        - email
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
          - Name: verified_phone_number
            Priority: 2
      UsernameAttributes:
        - email
        - phone_number
      LambdaConfig:
        PreSignUp: !GetAtt CognitoSocialLinkerFunction.Arn
 
  MomentousCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref MomentousUserPool
      ClientName: !Sub ${AWS::StackName}-client
      GenerateSecret: false
      PreventUserExistenceErrors: ENABLED
      AllowedOAuthFlowsUserPoolClient: True
      SupportedIdentityProviders:
        - COGNITO
        - Google
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - http://localhost:3000
        - !Ref CloudFrontUrl
      LogoutURLs:
        - http://localhost:3000
        - !Ref CloudFrontUrl
    DependsOn:
      - RaveIGoogleIdentityProvider
        
  RaveIGoogleIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref MomentousUserPool
      ProviderName: "Google"
      ProviderDetails:
        client_id: !Ref GoogleClientId
        client_secret: !Ref GoogleClientSecret
        authorize_scopes: "profile email openid"
      ProviderType: "Google"
      AttributeMapping:
        username: "sub"
        email: "email"
        email_verified: "email_verified"
        phone_number: "phoneNumbers"
        given_name: "given_name"
        family_name: "family_name"
        gender: "genders"
        locale: "locale"
        picture: "picture"
  
  MomentousCognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Join ['-', ['momentous', !FindInMap [Environment, !Ref Environment, 'AbbrLowerCase']]]
      # Domain: Momentous-dev
      UserPoolId: !Ref MomentousUserPool
    
  SNSCognitoRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal: 
              Service: 
                - "cognito-idp.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "CognitoSNSPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: "sns:publish"
                Resource: "*"

  CognitoSocialLinkerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Cognito social function
      CodeUri: ./momentous-cognito-social-linker
      FunctionName: Momentous-cognito-social-linker
      Handler: app.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Tracing: Active
      Policies:
        - AmazonCognitoPowerUser
      Environment:
        Variables:
          ENVIRONMENT: !FindInMap [Environment, !Ref Environment, 'AbbrLowerCase']
          
  LayerDependencies:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      ContentUri: ./layers/dependencies/
      RetentionPolicy: Delete
      
  MomentousTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: momentous-table
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      - AttributeName: cause_created_at
        AttributeType: S
      - AttributeName: cause_total_up_votes
        AttributeType: N
      - AttributeName: cause_total_down_votes
        AttributeType: N
      - AttributeName: cause_status
        AttributeType: S
      LocalSecondaryIndexes:
      - IndexName: cause_created_at-index
        KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: cause_created_at
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: cause_total_up_votes-index
        KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: cause_total_up_votes
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: cause_total_down_votes-index
        KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: cause_total_down_votes
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: cause_status-index
        KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: cause_status
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
          
#   MomentousApi:
#     Type: 'AWS::Serverless::Api'
#     Properties:
#       Name: Momentous-Web-Service
#       StageName: !FindInMap [Environment, !Ref Environment, 'AbbrLowerCase']
#       # Cors: "'*'"
#       TracingEnabled: True
#       DefinitionBody:
#         'Fn::Transform':
#           Name: 'AWS::Include'
#           Parameters:
#             Location: momentous-openapi.yaml
#       Auth:
#       #   DefaultAuthorizer: LambdaTokenAuthorizer
#         Authorizers:
#           LambdaTokenAuthorizer:
#             FunctionArn: !GetAtt MomentousAuthFunction.Arn
#             Identity:
#               Header: Authorization
#               ReauthorizeEvery: 300


# Outputs:
#   ApiUrl:
#     Description: API url of the Dev environment
#     Value:
#       !Join ['/', [!Sub 'https://${MomentousApi}.execute-api.${AWS::Region}.amazonaws.com', !FindInMap [Environment, !Ref Environment, 'AbbrLowerCase']]]